#!/bin/bash

# $1 => zookeeper host[s]
# $2 => topic name
# $3 => timeout in seconds, default = 60s

service_name="topic"
timeout_max_seconds=${3:-60}
delay=2

function print-usage {
  echo "Usage: wait-for-${service_name}.sh <zookeeper-host>:<port>[,<zookeeper-host-2>:<port>,...] <topic> [timeout] [-exec <command>]"
}

start_time=$(date +%s)
let timeout=$start_time+$timeout_max_seconds

if [ "$#" -lt 2 ]; then
  print-usage
  exit 1
fi

all_zookeepers=$1

IFS=, read -a services <<< $all_zookeepers
if [ ${#services[@]} -lt 1 ]; then
  print-usage
  exit 2
fi

topic=$2
service="${services[0]}"

IFS=: read server port <<< $service
if [ -z "$server" ] || [ -z "$port" ]; then
  print-usage
  exit 3
fi

echo "Waiting for topic ${topic} at: $service"

function test_service {
  if kafka-topics --zookeeper $all_zookeepers --list | grep -e "^$topic\$" 2>&1> /dev/null; then
    return 0 # success
  else
    return 1 # failure
  fi
}

function poll {
  if test_service; then
    echo "$(date) -- Found $service_name"
  else
    if [ "$timeout" -le "$(date +%s)" ]; then
      echo "Didn't find $service_name within $timeout_max_seconds seconds. Exiting."
      exit 3
    fi

    echo "$(date) -- Didn't find ${service_name}. Sleeping for $delay sec."
    sleep $delay

    poll
  fi
}

poll

# Execute followup command
execute $@
